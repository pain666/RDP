# Install script for directory: D:/GitHub/FreeRDP/winpr/libwinpr

# Set the install prefix
if(NOT DEFINED CMAKE_INSTALL_PREFIX)
  set(CMAKE_INSTALL_PREFIX "C:/Program Files (x86)/FreeRDP")
endif()
string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")

# Set the install configuration name.
if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
  if(BUILD_TYPE)
    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
  else()
    set(CMAKE_INSTALL_CONFIG_NAME "Release")
  endif()
  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
endif()

# Set the component getting installed.
if(NOT CMAKE_INSTALL_COMPONENT)
  if(COMPONENT)
    message(STATUS "Install component: \"${COMPONENT}\"")
    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
  else()
    set(CMAKE_INSTALL_COMPONENT)
  endif()
endif()

# Is this installation the result of a crosscompile?
if(NOT DEFINED CMAKE_CROSSCOMPILING)
  set(CMAKE_CROSSCOMPILING "FALSE")
endif()

if("x${CMAKE_INSTALL_COMPONENT}x" STREQUAL "xlibrariesx" OR NOT CMAKE_INSTALL_COMPONENT)
  if("${CMAKE_INSTALL_CONFIG_NAME}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
    file(INSTALL DESTINATION "${CMAKE_INSTALL_PREFIX}/lib" TYPE STATIC_LIBRARY OPTIONAL FILES "D:/GitHub/FreeRDP/Debug/winpr2.lib")
  elseif("${CMAKE_INSTALL_CONFIG_NAME}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
    file(INSTALL DESTINATION "${CMAKE_INSTALL_PREFIX}/lib" TYPE STATIC_LIBRARY OPTIONAL FILES "D:/GitHub/FreeRDP/Release/winpr2.lib")
  elseif("${CMAKE_INSTALL_CONFIG_NAME}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
    file(INSTALL DESTINATION "${CMAKE_INSTALL_PREFIX}/lib" TYPE STATIC_LIBRARY OPTIONAL FILES "D:/GitHub/FreeRDP/MinSizeRel/winpr2.lib")
  elseif("${CMAKE_INSTALL_CONFIG_NAME}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
    file(INSTALL DESTINATION "${CMAKE_INSTALL_PREFIX}/lib" TYPE STATIC_LIBRARY OPTIONAL FILES "D:/GitHub/FreeRDP/RelWithDebInfo/winpr2.lib")
  endif()
endif()

if("x${CMAKE_INSTALL_COMPONENT}x" STREQUAL "xlibrariesx" OR NOT CMAKE_INSTALL_COMPONENT)
  if("${CMAKE_INSTALL_CONFIG_NAME}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
    file(INSTALL DESTINATION "${CMAKE_INSTALL_PREFIX}/lib" TYPE SHARED_LIBRARY FILES "D:/GitHub/FreeRDP/Debug/winpr2.dll")
  elseif("${CMAKE_INSTALL_CONFIG_NAME}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
    file(INSTALL DESTINATION "${CMAKE_INSTALL_PREFIX}/lib" TYPE SHARED_LIBRARY FILES "D:/GitHub/FreeRDP/Release/winpr2.dll")
  elseif("${CMAKE_INSTALL_CONFIG_NAME}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
    file(INSTALL DESTINATION "${CMAKE_INSTALL_PREFIX}/lib" TYPE SHARED_LIBRARY FILES "D:/GitHub/FreeRDP/MinSizeRel/winpr2.dll")
  elseif("${CMAKE_INSTALL_CONFIG_NAME}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
    file(INSTALL DESTINATION "${CMAKE_INSTALL_PREFIX}/lib" TYPE SHARED_LIBRARY FILES "D:/GitHub/FreeRDP/RelWithDebInfo/winpr2.dll")
  endif()
endif()

if(NOT CMAKE_INSTALL_LOCAL_ONLY)
  # Include the install script for each subdirectory.
  include("D:/GitHub/FreeRDP/winpr/libwinpr/synch/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/locale/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/library/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/file/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/comm/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/pipe/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/interlocked/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/security/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/environment/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/crypto/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/registry/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/credentials/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/path/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/io/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/memory/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/input/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/shell/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/heap/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/utils/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/error/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/com/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/timezone/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/sysinfo/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/pool/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/handle/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/thread/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/winsock/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/sspi/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/winhttp/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/asn1/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/sspicli/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/crt/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/bcrypt/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/rpc/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/credui/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/wtsapi/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/dsparse/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/wnd/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/smartcard/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/nt/cmake_install.cmake")
  include("D:/GitHub/FreeRDP/winpr/libwinpr/clipboard/cmake_install.cmake")

endif()

